{
  "version": 3,
  "sources": ["build.ts"],
  "sourcesContent": ["import esbuild from \"esbuild\";\r\nimport path from \"path\";\r\nimport fs from 'fs';\r\n\r\nfunction getUrlParams(search: string): Record<string, string> {\r\n    let hashes = search.slice(search.indexOf('?') + 1).split('&')\r\n    return hashes.reduce((params, hash) => {\r\n        let [key, val] = hash.split('=')\r\n        return Object.assign(params, {[key]: decodeURIComponent(val)})\r\n    }, {})\r\n}\r\n\r\nconst prefix = /^@\\//;\r\n\r\nfunction replacePrefix(str: string) {\r\n    return str.replace(prefix, process.cwd() + \"/src/\");\r\n}\r\n\r\nasync function fileExists(path: fs.PathLike) {\r\n    try {\r\n        const stat = await fs.promises.stat(path);\r\n        return stat.isFile();\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst aliasPlugin: esbuild.Plugin = {\r\n    name: \"alias\",\r\n    setup(build) {\r\n        build.onResolve({ filter: /.*/ }, async args => {\r\n            const aliased = replacePrefix(args.path);\r\n            const fullPath = path.isAbsolute(aliased) ? aliased : path.join(args.resolveDir, aliased);\r\n            \r\n            if (!await fileExists(fullPath)) {\r\n                const possible = [\r\n                    \"/index.ts\",\r\n                    \"/index.js\",\r\n                ]\r\n\r\n                for (const postfix of possible) {\r\n                    if (await fileExists(fullPath + postfix)) {\r\n                        return {\r\n                            path: path.normalize(fullPath + postfix),\r\n                            namespace: \"file\"\r\n                        }\r\n                    }\r\n                }\r\n            } else if (aliased != args.path) {\r\n                return {\r\n                    path: path.normalize(aliased),\r\n                    namespace: \"file\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nimport sfc from '@vue/compiler-sfc';\r\nimport pug from \"pug\";\r\nimport sass from \"sass\";\r\n\r\nconst vuePlugin: esbuild.Plugin = {\r\n    name: \"vue\",\r\n    setup(build) {\r\n        build.initialOptions.define = {\r\n            ...build.initialOptions.define,\r\n            \"__VUE_OPTIONS_API__\": \"false\",\r\n            \"__VUE_PROD_DEVTOOLS__\": \"false\"\r\n        }\r\n\r\n        let idCounter = 1000;\r\n\r\n        // Resolve main \".vue\" import\r\n        build.onResolve({ filter: /\\.vue/ }, async (args) => {\r\n            const params = getUrlParams(args.path);\r\n\r\n            return {\r\n                path: path.isAbsolute(args.path) ? args.path : path.join(args.resolveDir, args.path),\r\n                namespace:\r\n                    params.type === \"script\" ? \"sfc-script\" :\r\n                    params.type === \"template\" ? \"sfc-template\" :\r\n                    params.type === \"style\" ? \"sfc-style\" : \"file\",\r\n                pluginData: {\r\n                    ...args.pluginData,\r\n                    index: params.index\r\n                }\r\n            }\r\n        });\r\n\r\n        // Load stub when .vue is requested\r\n        build.onLoad({ filter: /\\.vue$/ }, async args => {\r\n            const encPath = args.path.replace(/\\\\/g, \"\\\\\\\\\");\r\n\r\n            const source = await fs.promises.readFile(args.path, 'utf8');\r\n            const filename = path.relative(process.cwd(), args.path);\r\n            \r\n            const { descriptor } = sfc.parse(source, {\r\n                filename\r\n            });\r\n\r\n            const id = \"data-v-\" + idCounter++;\r\n            let code = \"\";\r\n\r\n            if (descriptor.script || descriptor.scriptSetup) {\r\n                code += `import script from \"${encPath}?type=script\";`\r\n            } else {\r\n                code += \"let script = {};\"\r\n            }\r\n\r\n            for (const style in descriptor.styles) {\r\n                code += `import \"${encPath}?type=style&index=${style}\";`\r\n            }\r\n\r\n            code += `import { render } from \"${encPath}?type=template\"; script.render = render;`\r\n\r\n            code += `script.__file = ${JSON.stringify(filename)}; script.__scopeId = ${JSON.stringify(id)};`;\r\n            code += \"export default script;\";\r\n\r\n            return {\r\n                contents: code,\r\n                resolveDir: path.dirname(args.path),\r\n                pluginData: { descriptor, id },\r\n                watchFiles: [ args.path ]\r\n            }\r\n        })\r\n\r\n        build.onLoad({ filter: /.*/, namespace: \"sfc-script\" }, async (args) => {\r\n            const { descriptor, id } = args.pluginData;\r\n\r\n            if (descriptor.script || descriptor.scriptSetup) {\r\n                const script = sfc.compileScript(descriptor, { id });\r\n                let code = script.content;\r\n\r\n                if (build.initialOptions.sourcemap && script.map) {\r\n                    const sourceMap = Buffer.from(JSON.stringify(script.map)).toString(\"base64\");\r\n                    \r\n                    code += \"\\n\\n//@ sourceMappingURL=data:application/json;charset=utf-8;base64,\" + sourceMap;\r\n                }\r\n\r\n                return {\r\n                    contents: code,\r\n                    loader: script.lang === \"ts\" ? \"ts\" : \"js\",\r\n                    resolveDir: path.dirname(args.path),\r\n                }\r\n            }\r\n        })\r\n\r\n        build.onLoad({ filter: /.*/, namespace: \"sfc-template\" }, async (args) => {\r\n            const { descriptor, id } = args.pluginData;\r\n            let source = descriptor.template.content;\r\n\r\n            if (descriptor.template.lang === \"pug\") {\r\n                source = pug.render(descriptor.template.content);\r\n\r\n                // Fix #default=\"#default\" and v-else=\"v-else\"\r\n                source = source.replace(/(#.*?|v-.*?)=\"\\1\"/g, \"$1\");\r\n            }\r\n\r\n            const template = sfc.compileTemplate({\r\n                id,\r\n                source,\r\n                filename: args.path,\r\n                scoped: descriptor.styles.some(o => o.scoped)\r\n            });\r\n\r\n            return {\r\n                contents: template.code,\r\n                loader: \"js\",\r\n                resolveDir: path.dirname(args.path),\r\n            }\r\n        })\r\n\r\n        build.onLoad({ filter: /.*/, namespace: \"sfc-style\" }, async (args) => {\r\n            const { descriptor, index, id } = args.pluginData;\r\n\r\n            const style: import(\"@vue/compiler-sfc\").SFCStyleBlock = descriptor.styles[index];\r\n            let source = style.content;\r\n            let includedFiles = [];\r\n\r\n            if (style.lang === \"sass\" || style.lang === \"scss\") {\r\n                const result: sass.Result = await new Promise((resolve, reject) => sass.render({\r\n                    data: source,\r\n                    indentedSyntax: style.lang === \"sass\",\r\n                    includePaths: [\r\n                        path.dirname(args.path)\r\n                    ],\r\n                    importer: [\r\n                        url => {\r\n                            const modulePath = path.join(process.cwd(), \"node_modules\", url);\r\n\r\n                            if (fs.existsSync(modulePath)) {\r\n                                return { file: modulePath }\r\n                            }\r\n\r\n                            return null\r\n                        },\r\n                        url => ({ file: replacePrefix(url) })\r\n                    ]\r\n                }, (ex, res) => ex ? reject(ex) : resolve(res)));\r\n\r\n                includedFiles = result.stats.includedFiles;\r\n                source = String(result.css);\r\n            }\r\n\r\n            const template = await sfc.compileStyleAsync({\r\n                filename: args.path,\r\n                id,\r\n                source,\r\n                scoped: style.scoped,\r\n            });\r\n\r\n            return {\r\n                contents: template.code,\r\n                loader: \"css\",\r\n                resolveDir: path.dirname(args.path),\r\n                watchFiles: includedFiles\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nconst buildOpts: esbuild.BuildOptions = {\r\n    entryPoints: ['src/main-client.ts'],\r\n    bundle: true,\r\n    outfile: 'dist/out.js',\r\n    plugins: [aliasPlugin, vuePlugin],\r\n    target: \"es2015\",\r\n    // platform: \"node\",\r\n    sourcemap: true,\r\n    // minify: true\r\n}\r\n\r\nif (process.argv.includes(\"--serve\")) {\r\n    esbuild.serve({\r\n        servedir: \"dist\",\r\n        port: 8080\r\n    }, buildOpts)\r\n    \r\n    console.log(\"Serving on http://localhost:8080\");\r\n} else {\r\n    if (process.argv.includes(\"-w\")) {\r\n        buildOpts.watch = true;\r\n        console.log(\"Watching for changes\");\r\n    }\r\n\r\n    esbuild.build(buildOpts).catch(o => console.error(o))\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA,sBAAsB,QAAwC;AAC1D,MAAI,SAAS,OAAO,MAAM,OAAO,QAAQ,OAAO,GAAG,MAAM;AACzD,SAAO,OAAO,OAAO,CAAC,QAAQ,SAAS;AACnC,QAAI,CAAC,KAAK,OAAO,KAAK,MAAM;AAC5B,WAAO,OAAO,OAAO,QAAQ,GAAE,MAAM,mBAAmB;AAAA,KACzD;AAAA;AAGP,MAAM,SAAS;AAEf,uBAAuB,KAAa;AAChC,SAAO,IAAI,QAAQ,QAAQ,QAAQ,QAAQ;AAAA;AAG/C,oBAA0B,OAAmB;AAAA;AACzC,QAAI;AACA,YAAM,OAAO,MAAM,GAAG,SAAS,KAAK;AACpC,aAAO,KAAK;AAAA,aACP,KAAP;AACE,aAAO;AAAA;AAAA;AAAA;AAIf,MAAM,cAA8B;AAAA,EAChC,MAAM;AAAA,EACN,MAAM,OAAO;AACT,UAAM,UAAU,EAAE,QAAQ,QAAQ,CAAM,SAAQ;AAC5C,YAAM,UAAU,cAAc,KAAK;AACnC,YAAM,WAAW,KAAK,WAAW,WAAW,UAAU,KAAK,KAAK,KAAK,YAAY;AAEjF,UAAI,CAAC,OAAM,WAAW,YAAW;AAC7B,cAAM,WAAW;AAAA,UACb;AAAA,UACA;AAAA;AAGJ,mBAAW,WAAW,UAAU;AAC5B,cAAI,MAAM,WAAW,WAAW,UAAU;AACtC,mBAAO;AAAA,cACH,MAAM,KAAK,UAAU,WAAW;AAAA,cAChC,WAAW;AAAA;AAAA;AAAA;AAAA,iBAIhB,WAAW,KAAK,MAAM;AAC7B,eAAO;AAAA,UACH,MAAM,KAAK,UAAU;AAAA,UACrB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/B;AACA;AACA;AAEA,MAAM,YAA4B;AAAA,EAC9B,MAAM;AAAA,EACN,MAAM,OAAO;AACT,UAAM,eAAe,SAAS,iCACvB,MAAM,eAAe,SADE;AAAA,MAE1B,uBAAuB;AAAA,MACvB,yBAAyB;AAAA;AAG7B,QAAI,YAAY;AAGhB,UAAM,UAAU,EAAE,QAAQ,WAAW,CAAO,SAAS;AACjD,YAAM,SAAS,aAAa,KAAK;AAEjC,aAAO;AAAA,QACH,MAAM,KAAK,WAAW,KAAK,QAAQ,KAAK,OAAO,KAAK,KAAK,KAAK,YAAY,KAAK;AAAA,QAC/E,WACI,OAAO,SAAS,WAAW,eAC3B,OAAO,SAAS,aAAa,iBAC7B,OAAO,SAAS,UAAU,cAAc;AAAA,QAC5C,YAAY,iCACL,KAAK,aADA;AAAA,UAER,OAAO,OAAO;AAAA;AAAA;AAAA;AAM1B,UAAM,OAAO,EAAE,QAAQ,YAAY,CAAM,SAAQ;AAC7C,YAAM,UAAU,KAAK,KAAK,QAAQ,OAAO;AAEzC,YAAM,SAAS,MAAM,GAAG,SAAS,SAAS,KAAK,MAAM;AACrD,YAAM,WAAW,KAAK,SAAS,QAAQ,OAAO,KAAK;AAEnD,YAAM,EAAE,eAAe,IAAI,MAAM,QAAQ;AAAA,QACrC;AAAA;AAGJ,YAAM,KAAK,YAAY;AACvB,UAAI,OAAO;AAEX,UAAI,WAAW,UAAU,WAAW,aAAa;AAC7C,gBAAQ,uBAAuB;AAAA,aAC5B;AACH,gBAAQ;AAAA;AAGZ,iBAAW,SAAS,WAAW,QAAQ;AACnC,gBAAQ,WAAW,4BAA4B;AAAA;AAGnD,cAAQ,2BAA2B;AAEnC,cAAQ,mBAAmB,KAAK,UAAU,iCAAiC,KAAK,UAAU;AAC1F,cAAQ;AAER,aAAO;AAAA,QACH,UAAU;AAAA,QACV,YAAY,KAAK,QAAQ,KAAK;AAAA,QAC9B,YAAY,EAAE,YAAY;AAAA,QAC1B,YAAY,CAAE,KAAK;AAAA;AAAA;AAI3B,UAAM,OAAO,EAAE,QAAQ,MAAM,WAAW,gBAAgB,CAAO,SAAS;AACpE,YAAM,EAAE,YAAY,OAAO,KAAK;AAEhC,UAAI,WAAW,UAAU,WAAW,aAAa;AAC7C,cAAM,SAAS,IAAI,cAAc,YAAY,EAAE;AAC/C,YAAI,OAAO,OAAO;AAElB,YAAI,MAAM,eAAe,aAAa,OAAO,KAAK;AAC9C,gBAAM,YAAY,OAAO,KAAK,KAAK,UAAU,OAAO,MAAM,SAAS;AAEnE,kBAAQ,yEAAyE;AAAA;AAGrF,eAAO;AAAA,UACH,UAAU;AAAA,UACV,QAAQ,OAAO,SAAS,OAAO,OAAO;AAAA,UACtC,YAAY,KAAK,QAAQ,KAAK;AAAA;AAAA;AAAA;AAK1C,UAAM,OAAO,EAAE,QAAQ,MAAM,WAAW,kBAAkB,CAAO,SAAS;AACtE,YAAM,EAAE,YAAY,OAAO,KAAK;AAChC,UAAI,SAAS,WAAW,SAAS;AAEjC,UAAI,WAAW,SAAS,SAAS,OAAO;AACpC,iBAAS,IAAI,OAAO,WAAW,SAAS;AAGxC,iBAAS,OAAO,QAAQ,sBAAsB;AAAA;AAGlD,YAAM,WAAW,IAAI,gBAAgB;AAAA,QACjC;AAAA,QACA;AAAA,QACA,UAAU,KAAK;AAAA,QACf,QAAQ,WAAW,OAAO,KAAK,OAAK,EAAE;AAAA;AAG1C,aAAO;AAAA,QACH,UAAU,SAAS;AAAA,QACnB,QAAQ;AAAA,QACR,YAAY,KAAK,QAAQ,KAAK;AAAA;AAAA;AAItC,UAAM,OAAO,EAAE,QAAQ,MAAM,WAAW,eAAe,CAAO,SAAS;AACnE,YAAM,EAAE,YAAY,OAAO,OAAO,KAAK;AAEvC,YAAM,QAAmD,WAAW,OAAO;AAC3E,UAAI,SAAS,MAAM;AACnB,UAAI,gBAAgB;AAEpB,UAAI,MAAM,SAAS,UAAU,MAAM,SAAS,QAAQ;AAChD,cAAM,SAAsB,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW,KAAK,OAAO;AAAA,UAC3E,MAAM;AAAA,UACN,gBAAgB,MAAM,SAAS;AAAA,UAC/B,cAAc;AAAA,YACV,KAAK,QAAQ,KAAK;AAAA;AAAA,UAEtB,UAAU;AAAA,YACN,SAAO;AACH,oBAAM,aAAa,KAAK,KAAK,QAAQ,OAAO,gBAAgB;AAE5D,kBAAI,GAAG,WAAW,aAAa;AAC3B,uBAAO,EAAE,MAAM;AAAA;AAGnB,qBAAO;AAAA;AAAA,YAEX,SAAQ,GAAE,MAAM,cAAc;AAAA;AAAA,WAEnC,CAAC,IAAI,QAAQ,KAAK,OAAO,MAAM,QAAQ;AAE1C,wBAAgB,OAAO,MAAM;AAC7B,iBAAS,OAAO,OAAO;AAAA;AAG3B,YAAM,WAAW,MAAM,IAAI,kBAAkB;AAAA,QACzC,UAAU,KAAK;AAAA,QACf;AAAA,QACA;AAAA,QACA,QAAQ,MAAM;AAAA;AAGlB,aAAO;AAAA,QACH,UAAU,SAAS;AAAA,QACnB,QAAQ;AAAA,QACR,YAAY,KAAK,QAAQ,KAAK;AAAA,QAC9B,YAAY;AAAA;AAAA;AAAA;AAAA;AAM5B,MAAM,YAAkC;AAAA,EACpC,aAAa,CAAC;AAAA,EACd,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS,CAAC,aAAa;AAAA,EACvB,QAAQ;AAAA,EAER,WAAW;AAAA;AAIf,IAAI,QAAQ,KAAK,SAAS,YAAY;AAClC,UAAQ,MAAM;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,KACP;AAEH,UAAQ,IAAI;AAAA,OACT;AACH,MAAI,QAAQ,KAAK,SAAS,OAAO;AAC7B,cAAU,QAAQ;AAClB,YAAQ,IAAI;AAAA;AAGhB,UAAQ,MAAM,WAAW,MAAM,OAAK,QAAQ,MAAM;AAAA;",
  "names": []
}
